@page "/exchange/{Id:guid}"
@using BlockDudes.Services
@using BlockDudes.Models
@inject AssetService AssetService
@inject IAccountsService AccountsService

<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    @if (viewModel.Image != null)
                    {
                        <ImageView Class="card-img-top" Url="@viewModel.Image.StringRepresentation" />
                    }
                    <div class="card-body">
                        <h5 class="card-title">@viewModel.Title</h5>
                        <p class="card-text">@viewModel.Description</p>
                        <div class="form-group">
                            <select class="form-control" bind="@AssetForExchange">
                                <option value="default"></option>
                                @foreach (var asset in availableAssets)
                                {
                                    <option value="@asset.Id.ToString()">@asset.Title</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <button class="btn btn-primary" onclick="@ExchangeAsset">Exchange</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    [Parameter]
    public Guid Id { get; set; }

    private string AssetForExchange { get; set; } = "default";

    private AssetViewModel viewModel;

    private List<AssetViewModel> availableAssets;

    protected override void OnInit()
    {
        var currentAccount = AccountsService.GetCurrentAccount();
        var allModels = AssetService.GetAll();

        availableAssets = allModels.Where(
            asset => asset.Address != currentAccount.Address).ToList();
        viewModel = allModels
            .First(it => it.Id == Id);
    }

    private void ExchangeAsset()
    {
        Guid asset;
        if (AssetForExchange != null && Guid.TryParse(AssetForExchange, out asset))
        {

        }
    }
}
